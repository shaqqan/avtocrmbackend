import { DataSource } from 'typeorm';
import { Language } from '../entities';

export class LanguageSeeder {
    constructor(private readonly dataSource: DataSource) { }
    async seed() {
        const languageRepository = this.dataSource.getRepository(Language);

        const languages: Partial<Language>[] = [
            { name: 'English', locale: 'en' },
            { name: 'Russian', locale: 'ru' },
            { name: 'Uzbek', locale: 'uz' },
            { name: 'Spanish', locale: 'es' },
            { name: 'French', locale: 'fr' },
            { name: 'German', locale: 'de' },
            { name: 'Italian', locale: 'it' },
            { name: 'Portuguese', locale: 'pt' },
            { name: 'Arabic', locale: 'ar' },
            { name: 'Chinese', locale: 'zh' },
            { name: 'Japanese', locale: 'ja' },
            { name: 'Korean', locale: 'ko' },
            { name: 'Hindi', locale: 'hi' },
            { name: 'Turkish', locale: 'tr' },
            { name: 'Persian', locale: 'fa' },
            { name: 'Polish', locale: 'pl' },
            { name: 'Dutch', locale: 'nl' },
            { name: 'Czech', locale: 'cs' },
            { name: 'Romanian', locale: 'ro' },
            { name: 'Ukrainian', locale: 'uk' },
            { name: 'Kazakh', locale: 'kk' },
            { name: 'Tajik', locale: 'tg' },
            { name: 'Pashto', locale: 'ps' },
            { name: 'Azerbaijani', locale: 'az' },
            { name: 'Georgian', locale: 'ka' },
            { name: 'Malay', locale: 'ms' },
            { name: 'Vietnamese', locale: 'vi' },
            { name: 'Thai', locale: 'th' },
            { name: 'Bengali', locale: 'bn' },
            { name: 'Swahili', locale: 'sw' },
            { name: 'Amharic', locale: 'am' },
            { name: 'Hebrew', locale: 'he' },
            { name: 'Greek', locale: 'el' },
            { name: 'Hungarian', locale: 'hu' },
            { name: 'Finnish', locale: 'fi' },
            { name: 'Norwegian', locale: 'no' },
            { name: 'Swedish', locale: 'sv' },
            { name: 'Danish', locale: 'da' },
            { name: 'Slovak', locale: 'sk' },
            { name: 'Serbian', locale: 'sr' },
            { name: 'Croatian', locale: 'hr' },
            { name: 'Bosnian', locale: 'bs' },
            { name: 'Albanian', locale: 'sq' },
            { name: 'Lithuanian', locale: 'lt' },
            { name: 'Latvian', locale: 'lv' },
            { name: 'Estonian', locale: 'et' },
            { name: 'Icelandic', locale: 'is' },
            { name: 'Mongolian', locale: 'mn' },
            { name: 'Nepali', locale: 'ne' },
            { name: 'Sinhala', locale: 'si' },
            { name: 'Lao', locale: 'lo' },
            { name: 'Khmer', locale: 'km' },
            { name: 'Burmese', locale: 'my' },
            { name: 'Zulu', locale: 'zu' },
            { name: 'Xhosa', locale: 'xh' },
            { name: 'Yoruba', locale: 'yo' },
            { name: 'Igbo', locale: 'ig' },
            { name: 'Hausa', locale: 'ha' },
            { name: 'Somali', locale: 'so' },
            { name: 'Afrikaans', locale: 'af' },
            { name: 'Galician', locale: 'gl' },
            { name: 'Catalan', locale: 'ca' },
            { name: 'Basque', locale: 'eu' },
            { name: 'Irish', locale: 'ga' },
            { name: 'Scottish Gaelic', locale: 'gd' },
            { name: 'Welsh', locale: 'cy' },
            { name: 'Macedonian', locale: 'mk' },
            { name: 'Belarusian', locale: 'be' },
            { name: 'Armenian', locale: 'hy' },
            { name: 'Malayalam', locale: 'ml' },
            { name: 'Tamil', locale: 'ta' },
            { name: 'Telugu', locale: 'te' },
            { name: 'Kannada', locale: 'kn' },
            { name: 'Marathi', locale: 'mr' },
            { name: 'Gujarati', locale: 'gu' },
            { name: 'Punjabi', locale: 'pa' },
            { name: 'Urdu', locale: 'ur' },
            { name: 'Kurdish', locale: 'ku' },
            { name: 'Quechua', locale: 'qu' },
            { name: 'Aymara', locale: 'ay' },
            { name: 'Maori', locale: 'mi' },
            { name: 'Samoan', locale: 'sm' },
            { name: 'Tongan', locale: 'to' },
            { name: 'Fijian', locale: 'fj' },
            { name: 'Hawaiian', locale: 'haw' },
            { name: 'Esperanto', locale: 'eo' },
            { name: 'Latin', locale: 'la' },
            { name: 'Interlingua', locale: 'ia' },
            { name: 'Inuktitut', locale: 'iu' },
            { name: 'Greenlandic', locale: 'kl' },
            { name: 'Cherokee', locale: 'chr' },
            { name: 'Navajo', locale: 'nv' },
            { name: 'Tatar', locale: 'tt' },
            { name: 'Bashkir', locale: 'ba' },
            { name: 'Chuvash', locale: 'cv' },
            { name: 'Udmurt', locale: 'udm' },
            { name: 'Komi', locale: 'kv' },
            { name: 'Yakut', locale: 'sah' },
            { name: 'Abkhaz', locale: 'ab' }
        ];

        for (const language of languages) {
            const exists = await languageRepository.findOne({ where: { locale: language.locale } });
            if (!exists) {
                await languageRepository.save(languageRepository.create(language));
            }
        }

        console.log(`${languages.length} languages inserted.`);
    }
}