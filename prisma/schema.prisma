generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int                  @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String               @unique
  password    String
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  deletedAt   DateTime?
  roles       UsersOnRoles[]
  permissions UsersOnPermissions[]

  @@map("users")
}

model Role {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  users       UsersOnRoles[]
  permissions RolesOnPermissions[]

  @@map("roles")
}

model Permission {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  description String?
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  users       UsersOnPermissions[]
  roles       RolesOnPermissions[]

  @@map("permissions")
}

model UsersOnRoles {
  userId     Int
  roleId     Int
  assignedAt DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  role       Role     @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
  @@map("users_on_roles")
}

model UsersOnPermissions {
  userId       Int
  permissionId Int
  assignedAt   DateTime   @default(now())
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([userId, permissionId])
  @@map("users_on_permissions")
}

model RolesOnPermissions {
  roleId       Int
  permissionId Int
  assignedAt   DateTime   @default(now())
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("roles_on_permissions")
}

model Upload {
  id           Int        @id @default(autoincrement())
  name         String
  originalName String?
  path         String
  mimetype     String
  size         Int
  type         String
  isActive     Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  languages    Language[]

  @@map("uploads")
}

model Language {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  locale    String   @unique
  icon      Upload?  @relation(fields: [iconId], references: [id])
  iconId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("languages")
}
